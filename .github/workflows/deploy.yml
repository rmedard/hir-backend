name: Build & Deploy HouseInRwanda

on:
  push:
    branches: [ "main", "staging" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
      url: ${{ github.ref_name == 'main' && 'https://www.houseinrwanda.com' || 'https://dev.houseinrwanda.com' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Detect precise changes
        id: check_changes
        run: |
          # Get changed files in the last commit
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} 2>/dev/null || echo "initial")
          echo "Changed files: $CHANGED_FILES"

          # Check for composer.lock changes
          if echo "$CHANGED_FILES" | grep -q "composer.lock"; then
            echo "composer_lock_changed=true" >> $GITHUB_OUTPUT
          else
            echo "composer_lock_changed=false" >> $GITHUB_OUTPUT
          fi

          # Check for composer.json changes
          if echo "$CHANGED_FILES" | grep -q "composer.json"; then
            echo "composer_json_changed=true" >> $GITHUB_OUTPUT
          else
            echo "composer_json_changed=false" >> $GITHUB_OUTPUT
          fi

          echo "Composer lock changed: ${{ steps.check_changes.outputs.composer_lock_changed }}"
          echo "Composer json changed: ${{ steps.check_changes.outputs.composer_json_changed }}"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_mysql, json, gd, mbstring, zip
          tools: composer:v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: |
          # Always install dependencies for now to simplify
          echo "Installing dependencies..."
          composer install --prefer-dist --no-dev --optimize-autoloader --no-interaction
          echo "Dependencies installed"

      - name: Prepare deployment files
        run: |
          # Create basic structure
          mkdir -p deployment-files

          # Copy all files except excluded ones
          rsync -av --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='deployment-files' \
            --exclude='vendor' \
            --exclude='node_modules' \
            --exclude='sites/default/files' \
            ./ deployment-files/

          # Copy vendor
          if [ -d "vendor" ]; then
            cp -r vendor deployment-files/
          fi

          echo "Deployment files prepared:"
          ls -la deployment-files/ | head -10

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ github.ref_name == 'main' && secrets.PRODUCTION_HOST || secrets.STAGING_HOST }}
          username: ${{ github.ref_name == 'main' && secrets.PRODUCTION_USER || secrets.STAGING_USER }}
          key: ${{ github.ref_name == 'main' && secrets.PRODUCTION_SSH_KEY || secrets.STAGING_SSH_KEY }}
          port: 22
          script: |
            # Set deployment paths
            if [ "${{ github.ref_name }}" = "main" ]; then
              DEPLOY_PATH="${{ secrets.PRODUCTION_DEPLOY_PATH }}"
              WEBROOT_PATH="$DEPLOY_PATH/httpdocs"
            else
              DEPLOY_PATH="${{ secrets.STAGING_DEPLOY_PATH }}"
              WEBROOT_PATH="$DEPLOY_PATH/httpdocs"
            fi

            echo "=== STARTING DEPLOYMENT ==="
            echo "Deploy path: $DEPLOY_PATH"
            echo "Webroot path: $WEBROOT_PATH"

            # Debug: Check current state
            echo "=== CURRENT STATE ==="
            ls -la $DEPLOY_PATH/ 2>/dev/null | head -5 || echo "Deploy path does not exist yet"
            ls -la $WEBROOT_PATH/ 2>/dev/null | head -5 || echo "Webroot does not exist yet"

            # Debug: Test permissions
            echo "=== PERMISSION TEST ==="
            touch $DEPLOY_PATH/test_write.txt 2>/dev/null && \
              echo "✓ Can write to deploy path" && rm $DEPLOY_PATH/test_write.txt || \
              echo "✗ Cannot write to deploy path"

            touch $WEBROOT_PATH/test_write.txt 2>/dev/null && \
              echo "✓ Can write to webroot" && rm $WEBROOT_PATH/test_write.txt || \
              echo "✗ Cannot write to webroot"

            # Create directories if they don't exist
            echo "=== SETUP DIRECTORIES ==="
            mkdir -p $DEPLOY_PATH $WEBROOT_PATH
            ls -la $DEPLOY_PATH/ | head -3

            # Simple file sync using rsync from current directory
            echo "=== SYNCING FILES ==="
            rsync -av --delete \
              --exclude='sites/default/files' \
              /github/workspace/deployment-files/ $DEPLOY_PATH/

            echo "=== VERIFYING DEPLOYMENT ==="
            ls -la $DEPLOY_PATH/ | head -10
            ls -la $WEBROOT_PATH/ | head -5

            # Simple test - no complex operations yet
            echo "=== BASIC TEST ==="
            if [ -f "$WEBROOT_PATH/index.php" ]; then
              echo "✓ index.php found"
            else
              echo "✗ index.php not found"
            fi

            echo "=== DEPLOYMENT COMPLETED ==="
